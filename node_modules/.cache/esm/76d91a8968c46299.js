"main";_68c‍.x([["ResidentAPI",()=>ResidentAPI],["ReportsAPI",()=>ReportsAPI],["TransactionAPI",()=>TransactionAPI]]);let RESTDataSource;_68c‍.w("apollo-datasource-rest",[["RESTDataSource",["RESTDataSource"],function(v){RESTDataSource=v}]]);yield;

const axios = require('axios')

       class ResidentAPI extends RESTDataSource {
    constructor() {
        super();
        this.baseURL = 'http://localhost:3000/';
    }

    async getAllResidents() {
        return this.get('residents');
    }

    async getAResident(idNumber) {
        const result = await this.get('residents/'+idNumber);

        return result;
    }

    async createAResident(args) {
        args.baseURL = this.baseURL
        return new Promise(function(resolve,reject) {
            axios.post(args.baseURL+'residents', {
                identity_document: args.identity_document,
                name: args.name,
                birth_date: args.birth_date,
                admission_date: args.admission_date,
                gender: args.gender,
                state: args.state,
                contact_name: args.contact_name,
                contact_phone: args.contact_phone
            })
            .then((res) => {
                resolve(res.data);
            })
            .catch((error) => {
                _68c‍.g.console.error(error)
            })
        })
    }
};

       class ReportsAPI extends RESTDataSource {
    constructor() {
        super();
        this.baseURL = 'http://localhost:3030/';
    }

    async getAllReports() {
        return this.get('reports');
    }

    async getAllTypes() {
        return this.get('report_types');
    }

    async getAReport(idNumber) {
        const result = await this.get('reports/'+idNumber);

        return result;
    }

    async getAType(idNumber) {
        const result = await this.get('report_types/'+idNumber);
        _68c‍.g.console.log(result);
        return result;
    }

    async createAReport(args) {
        args.baseURL = this.baseURL
        return new Promise(function(resolve,reject) {
            axios.post(args.baseURL+'reports', {
                report_type: args.type,
                created_at: args.created_at,
                IP: args.IP,
            })
            .then((res) => {
                resolve(res.data);
            })
            .catch((error) => {
                _68c‍.g.console.error(error)
            })
        })
    }

    async createAReportType(args) {
        args.baseURL = this.baseURL
        return new Promise(function(resolve,reject) {
            axios.post(args.baseURL+'report_types', {
                Type: args.Type,
            })
            .then((res) => {
                resolve(res.data);
            })
            .catch((error) => {
                _68c‍.g.console.error(error)
            })
        })
    }
};

       class TransactionAPI extends RESTDataSource {
    constructor() {
        super();
        this.baseURL = 'http://35.199.81.116:8000/';
    }

    async getAllTransactions() {
        const result = await this.get('transaction/');
        return result["results"];
    }

    async getATransaction(idNumber) {
        const result = await this.get('transaction/'+idNumber);

        return result;
    }

    async createATransaction(args) {
        args.baseURL = this.baseURL
        return new Promise(function(resolve,reject) {
            axios.post(args.baseURL+'transaction', {
                type_transation_id: args.type_transation_id,
                total_amount: args.total_amount,
                observation: args.observation,
                balance: args.balance,
                contact_name: args.contact_name,
                transactiondetails: [{
                    quantity: args.quantity,
                    subtotal: args.subtotal
                }]

            })
            .then((res) => {
                resolve("Created");
            })
            .catch((error) => {
                _68c‍.g.console.error(error)
            })
        })
    }
};
